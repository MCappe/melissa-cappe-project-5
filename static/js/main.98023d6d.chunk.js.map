{"version":3,"sources":["Podcasts.js","Select.js","api-transparent background for white background.png","App.js","reportWebVitals.js","index.js"],"names":["Podcasts","className","src","this","props","podImage","alt","podTitle","href","podDescription","target","rel","Component","Select","id","htmlFor","name","onChange","change","aria-label","value","App","handleChange","e","podOption","options","selectedIndex","getPodcasts","executeScroll","resultsRef","current","scrollIntoView","state","podcasts","createRef","idValue","axios","url","method","params","headers","then","response","console","log","data","setState","ref","map","pod","image","title","website","image2","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAyBeA,E,uKArBP,OACI,8BACI,yBAASC,UAAU,aAAnB,SACI,6BACI,qBAAIA,UAAU,YAAd,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKC,IAAKC,KAAKC,MAAMC,SAAUC,IAAKH,KAAKC,MAAMG,aAEnD,sBAAKN,UAAU,UAAf,UACI,6BAAKE,KAAKC,MAAMG,WAChB,mBAAGC,KAAML,KAAKC,MAAMK,eAAgBC,OAAO,SAASC,IAAI,aAAxD,6C,GAZTC,aC0BRC,E,uKAxBP,OACI,yBAAQC,GAAG,SAAX,UACI,qBAAIb,UAAU,wCAAd,UAAsD,+BAAM,mBAAGA,UAAU,wBAAzE,oBAAyH,+BAAM,mBAAGA,UAAU,2BAC5I,mBAAGA,UAAU,wCAAb,+DACA,mBAAGA,UAAU,wCAAb,mEACA,qBAAKA,UAAU,SAAf,SACI,sBAAMA,UAAU,mDAAhB,SACI,uBAAOc,QAAQ,GAAf,SACI,yBAAQC,KAAK,WAAWF,GAAG,OAAOb,UAAU,SAASgB,SAAUd,KAAKC,MAAMc,OAAQC,aAAW,iDAA7F,UACI,oDACA,wBAAQC,MAAM,MAAMD,aAAW,aAA/B,wBACA,wBAAQC,MAAM,KAAKD,aAAW,SAA9B,oBACA,wBAAQC,MAAM,KAAKD,aAAW,cAA9B,yBACA,wBAAQC,MAAM,MAAMD,aAAW,SAA/B,oBACA,wBAAQC,MAAM,KAAKD,aAAW,OAA9B,kC,GAhBXP,aCFN,MAA0B,4ECyF1BS,E,kDAhFb,aAAe,IAAD,8BACZ,gBA+BFC,aAAe,SAACC,GAEd,IAAMC,EAAYD,EAAEb,OAAOe,QAAQF,EAAEb,OAAOgB,eAAeN,MAC3D,EAAKO,YAAYH,IAnCL,EAuCdI,cAAgB,kBAAM,EAAKC,WAAWC,QAAQC,kBApC5C,EAAKC,MAAQ,CACXC,SAAU,IAEZ,EAAKJ,WAAaK,sBANN,E,wDASDC,GAAU,IAAD,OAEpBC,IAAM,CACJC,IAAK,2DACLC,OAAQ,MACRC,OAAQ,CACN,SAAYJ,GAEdK,QAAS,CACP,kBAAmB,sCAEpBC,MAAK,SAACC,GACPC,QAAQC,IAAIF,EAASG,MAErB,EAAKC,SAAS,CACZb,SAAUS,EAASG,KAAKZ,WAE1B,EAAKL,qB,+BAiBP,OACE,sBAAK3B,UAAU,UAAf,UACE,sBAAKA,UAAU,UAAf,UAEE,cAAC,EAAD,CACAiB,OAAQf,KAAKmB,eAGb,sBAAMyB,IAAK5C,KAAK0B,WAAhB,SAEE1B,KAAK6B,MAAMC,SAASe,KAAI,SAACC,GACvB,OACE,cAAC,EAAD,CAEA5C,SAAU4C,EAAIC,MACd3C,SAAU0C,EAAIE,MACd1C,eAAgBwC,EAAIG,SAHfH,EAAInC,SASf,qBAAKb,UAAU,YAAf,SACE,mBAAGO,KAAK,UAAUP,UAAU,SAA5B,SAAqC,mBAAGA,UAAU,2BAIxD,mCACI,wDAAuB,mBAAGO,KAAK,2BAAR,6BACvB,qBAAKP,UAAU,aAAaC,IAAKmD,EAAQ/C,IAAI,8B,GAzErCM,aCIH0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.98023d6d.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass Podcasts extends Component {\n    render() {\n        return (\n            <div>\n                <section className=\"podSection\">\n                    <ul>\n                        <li className=\"container\">\n                            <div className=\"imageContainer\">\n                                <img src={this.props.podImage} alt={this.props.podTitle}/>\n                            </div>\n                            <div className=\"podInfo\">\n                                <h2>{this.props.podTitle}</h2>\n                                <a href={this.props.podDescription} target=\"_blank\" rel=\"noreferrer\">Podcast Website</a>\n                        \n                            </div>\n                        </li>\n                    </ul>\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default Podcasts;","import { Component } from 'react';\n\nclass Select extends Component {\n    render() {\n        return(\n            <header id=\"header\">\n                <h1 className=\"animate__animated animate__backInLeft\"><span><i className=\"fas fa-microphone\"></i></span> Hello Pod World <span><i className=\"fas fa-microphone\"></i></span></h1>\n                <p className=\"animate__animated animate__backInLeft\">What podcast do you feel like listening to today?</p>\n                <p className=\"animate__animated animate__backInLeft\">Select your genre and we'll tell you what's trending.</p>\n                <div className=\"select\">\n                    <form className=\"selections animate__animated animate__backInLeft\">\n                        <label htmlFor=\"\">\n                            <select name=\"podcasts\" id=\"pods\" className=\"select\" onChange={this.props.change} aria-label=\"Choose an option to sort the podcasts by genre\">\n                                <option>Select a genre</option>\n                                <option value=\"135\" aria-label=\"True Crime\">True Crime</option>\n                                <option value=\"77\" aria-label=\"Sports\">Sports</option>\n                                <option value=\"68\" aria-label=\"TV and Film\">TV and Film</option>\n                                <option value=\"133\" aria-label=\"Comedy\">Comedy</option>\n                                <option value=\"99\" aria-label=\"News\">News</option>\n                            </select>\n                        </label>\n                    </form>\n                </div>\n            </header> \n        )\n    }\n}\n\nexport default Select;","export default __webpack_public_path__ + \"static/media/api-transparent background for white background.443fcec0.png\";","import './App.css';\nimport { Component, createRef } from 'react';\nimport axios from 'axios';\nimport Podcasts from './Podcasts.js'\nimport Select from './Select.js';\nimport image2 from './api-transparent background for white background.png';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    // Initialize state to keep track of the data coming back from the ListenNotes API\n    this.state = {\n      podcasts: []\n    };\n    this.resultsRef = createRef();\n  }\n  \n  getPodcasts (idValue) {\n    // API call via axios\n    axios({\n      url: 'https://listen-api.listennotes.com/api/v2/best_podcasts/',\n      method: 'GET',\n      params: {\n        'genre_id': idValue\n      },\n      headers: {\n        'X-ListenAPI-Key': '47935c3ff89243c39e091cc561774aa5',\n      }\n    }).then((response) => {\n      console.log(response.data)\n      // setState to render the podcast information to the page\n      this.setState({\n        podcasts: response.data.podcasts\n      })\n      this.executeScroll();\n    })\n    \n    \n  }\n  \n  handleChange = (e) => {\n    // onChange event handler to listen for user to select a genre in the select drop down menu\n    const podOption = e.target.options[e.target.selectedIndex].value;\n    this.getPodcasts(podOption);\n    // console.log(podOption);\n  }\n  \n  executeScroll = () => this.resultsRef.current.scrollIntoView()\n  \n  \n  render() {\n    return (\n      <div className=\"podPage\">\n        <div className=\"wrapper\">\n          \n          <Select \n          change={this.handleChange}/>\n          \n\n          <main ref={this.resultsRef}>\n          {\n            this.state.podcasts.map((pod) => {\n              return (\n                <Podcasts \n                key={pod.id}\n                podImage={pod.image}\n                podTitle={pod.title}\n                podDescription={pod.website}/>\n              )\n            })\n          }\n          </main>\n\n          <div className=\"backToTop\">\n            <a href=\"#header\" className=\"backUp\"><i className=\"fas fa-arrow-up\"></i></a>\n          </div>\n\n        </div>\n      <footer>\n          <p>Â© Melissa Cappe for <a href=\"https://junocollege.com/\">Juno College</a></p>\n          <img className=\"listenLogo\" src={image2} alt=\"Listen API logo\"/>\n      </footer>\n    </div>\n    )\n  }\n}\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}